<paste log output from Kubernetes-mediated prediction, here>

[Initial_output]

flaskapp-6c67b6d544-5hrnz             1/1     Running            0               84m
flasklearnapp                         1/1     Running            0               24m
flasklearnapplication                 0/1     Pending            0               0s
mongo-express-68c4748bd6-lm66t        0/1     CrashLoopBackOff   9 (4m26s ago)   32m
mongodb-deployment-7bb6c6c4c7-26g7w   1/1     Running            0               30m
error: unable to forward port because pod is not running. Current status=Pending

[second output]
(.devops) GURUCHARANs-MBP:project-ml-microservice-kubernetes CHARAN$ ./run_kubernetes.sh 
Error from server (AlreadyExists): pods "flasklearnapplication" already exists
NAME                                  READY   STATUS             RESTARTS        AGE
firstpro-56bd6bbc49-z6hcq             1/1     Running            0               33m
flaskapp-6c67b6d544-5hrnz             1/1     Running            0               84m
flasklearnapp                         1/1     Running            0               25m
flasklearnapplication                 1/1     Running            0               33s
mongo-express-68c4748bd6-lm66t        0/1     CrashLoopBackOff   9 (4m59s ago)   32m
mongodb-deployment-7bb6c6c4c7-26g7w   1/1     Running            0               30m
Forwarding from 127.0.0.1:8000 -> 80
Forwarding from [::1]:8000 -> 80
Handling connection for 8000

[Third output]
(.devops) GURUCHARANs-MBP:project-ml-microservice-kubernetes CHARAN$ kubectl logs flasklearnapplication
 * Serving Flask app "app" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
/usr/local/lib/python3.7/site-packages/sklearn/ensemble/gradient_boosting.py:34: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  from ._gradient_boosting import predict_stages
/usr/local/lib/python3.7/site-packages/sklearn/ensemble/gradient_boosting.py:34: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  from ._gradient_boosting import predict_stages
 * Running on http://0.0.0.0:80/ (Press CTRL+C to quit)
 * Restarting with stat
/usr/local/lib/python3.7/site-packages/sklearn/ensemble/gradient_boosting.py:34: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  from ._gradient_boosting import predict_stages
/usr/local/lib/python3.7/site-packages/sklearn/ensemble/gradient_boosting.py:34: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  from ._gradient_boosting import predict_stages
 * Debugger is active!
 * Debugger PIN: 187-865-223
[2022-11-14 14:29:14,959] INFO in app: JSON payload: 
{'CHAS': {'0': 0}, 'RM': {'0': 6.575}, 'TAX': {'0': 296.0}, 'PTRATIO': {'0': 15.3}, 'B': {'0': 396.9}, 'LSTAT': {'0': 4.98}}
[2022-11-14 14:29:15,072] INFO in app: Inference payload DataFrame: 
   CHAS     RM    TAX  PTRATIO      B  LSTAT
0     0  6.575  296.0     15.3  396.9   4.98
[2022-11-14 14:29:15,084] INFO in app: Scaling Payload: 
   CHAS     RM    TAX  PTRATIO      B  LSTAT
0     0  6.575  296.0     15.3  396.9   4.98
[2022-11-14 14:29:15,091] INFO in app: prediction value: 
[20.35373177134412]
127.0.0.1 - - [14/Nov/2022 14:29:15] "POST /predict HTTP/1.1" 200 -